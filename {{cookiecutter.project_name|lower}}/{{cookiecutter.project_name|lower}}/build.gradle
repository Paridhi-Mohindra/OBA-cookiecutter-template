// vim: ft=groovy:sw=4:ts=4:expandtab

apply plugin: 'org.hidetake.ssh'
apply plugin: 'com.github.johnrengelman.shadow'

buildscript {
    dependencies {
        classpath 'com.github.jengelman.gradle.plugins:shadow:1.1.1'
        classpath 'org.hidetake:gradle-ssh-plugin:0.4.3-tgl' // hack custom build for Java 8
    }
}

dependencies {
    // compile "org.eclipse.jetty:jetty-servlet:${project['jetty.version']}"
}

shadowJar {
    manifest {
        attributes 'Main-Class': "{{cookiecutter.java_package_base}}.{{cookiecutter.project_name|lower}}.Main"
    }
    classifier = null
}

remotes {
    development {
        host = '10.1.1.100'
        user = 'vagrant'
        identity = file("/usr/share/vagrant/keys/vagrant")
    }
}

ssh.settings {
    logging = 'stdout'
    knownHosts = allowAnyHosts
}

task deploy(dependsOn: 'shadowJar') << {
    def buildId = version + "_" + (new Date().time)
    def destDir = "/opt/${project.name}/builds/${buildId}"
    ssh.run {
        session(remotes[host]) {
            execute "[ -d ${destDir} ] || mkdir -p ${destDir}"
            put shadowJar.outputs.files[0], "${destDir}/${project.name}.jar"
            put file("init.sh"), destDir
            execute "chmod 755 ${destDir}/init.sh"
            execute "[ ! -x /etc/init.d/${project.name} ] || /etc/init.d/${project.name} stop"
            execute "rm -f /opt/${project.name}/current || true"
            execute "ln -s ${destDir} /opt/${project.name}/current"
            execute "/etc/init.d/${project.name} start"
        }
    }
}

